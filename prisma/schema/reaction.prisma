model PostReaction {
  id            Int            @id @default(autoincrement())
  userId        String         @db.Uuid
  postId        String
  isDeleted     Boolean?       @default(false)
  createdAt     DateTime       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  updatedAt     DateTime?
  notifications Notification[]
  post          Post           @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user          AppUser?       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, postId], map: "uniquePostReaction")
}

model CommentReaction {
  id            Int            @id @default(autoincrement())
  userId        String         @db.Uuid
  commentId     String
  isDeleted     Boolean?       @default(false)
  createdAt     DateTime       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  updatedAt     DateTime?
  comment       Comment        @relation(fields: [commentId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  notifications Notification[]

  @@unique([userId, commentId], map: "uniqueCommentReaction")
}
